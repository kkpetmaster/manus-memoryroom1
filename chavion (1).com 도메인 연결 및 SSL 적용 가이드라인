# chavion.com 도메인 연결 및 SSL 적용 가이드라인

이 문서는 `chavion.com` 도메인을 귀하의 채팅 웹 애플리케이션에 연결하고, HTTPS 보안을 위해 SSL/TLS 인증서를 적용하는 방법에 대한 상세한 가이드라인을 제공합니다. 현재 샌드박스 환경의 제약으로 인해 Manus AI가 직접 도메인 소유권 확인 및 DNS 설정을 수행할 수 없으므로, 이 과정은 귀하께서 직접 진행하셔야 합니다. 아래의 단계를 따라 `chavion.com` 도메인과 SSL 인증서 설정을 완료하실 수 있습니다.

## 1. 도메인 DNS 설정

`chavion.com` 도메인을 귀하의 서버 IP 주소에 연결하려면 DNS(Domain Name System) 설정을 업데이트해야 합니다. 이 과정은 도메인을 구매한 도메인 등록 기관(예: GoDaddy, Namecheap, Gabia 등)의 웹사이트에서 진행됩니다.

### 1.1 A 레코드 설정

도메인 등록 기관의 DNS 관리 페이지에 로그인하여 `A 레코드`를 추가하거나 수정합니다. `A 레코드`는 도메인 이름을 IPv4 주소에 매핑하는 역할을 합니다.

*   **타입**: `A`
*   **이름/호스트**: `@` (또는 `chavion.com` 자체를 의미)
*   **값/대상**: 귀하의 서버 IP 주소 (예: `192.0.2.1`)
*   **TTL (Time To Live)**: `자동` 또는 `3600` (1시간)

### 1.2 CNAME 레코드 설정 (선택 사항: `www` 서브도메인)

`www.chavion.com`과 같은 서브도메인을 `chavion.com`으로 리디렉션하려면 `CNAME 레코드`를 추가합니다.

*   **타입**: `CNAME`
*   **이름/호스트**: `www`
*   **값/대상**: `chavion.com`
*   **TTL (Time To Live)**: `자동` 또는 `3600` (1시간)

**참고**: DNS 변경 사항이 전 세계적으로 전파되는 데는 몇 분에서 최대 48시간이 소요될 수 있습니다. DNS 전파 상태는 [DNS Checker](https://dnschecker.org/)와 같은 도구를 사용하여 확인할 수 있습니다.

## 2. SSL/TLS 인증서 발급 및 적용

HTTPS를 활성화하여 웹사이트의 보안을 강화하려면 SSL/TLS 인증서가 필요합니다. Let's Encrypt는 무료로 SSL 인증서를 발급해주는 가장 널리 사용되는 서비스입니다. Certbot을 사용하여 Let's Encrypt 인증서를 발급받고 Nginx에 적용하는 방법을 안내합니다.

### 2.1 Certbot 설치

서버에 Certbot을 설치합니다. Certbot은 Let's Encrypt 인증서 발급 및 갱신을 자동화하는 도구입니다.

```bash
sudo snap install core
sudo snap refresh core
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
```

### 2.2 Nginx 플러그인을 사용하여 인증서 발급

Certbot Nginx 플러그인을 사용하여 `chavion.com` 도메인에 대한 SSL 인증서를 발급받습니다. 이 명령은 Nginx 설정을 자동으로 수정하여 HTTPS를 활성화합니다.

```bash
sudo certbot --nginx -d chavion.com -d www.chavion.com
```

명령어를 실행하면 이메일 주소 입력, 서비스 약관 동의, 이메일 수신 여부 선택 등의 프롬프트가 나타납니다. 지시에 따라 진행하면 인증서가 발급되고 Nginx 설정이 업데이트됩니다.

**참고**: Certbot은 기본적으로 90일마다 인증서를 자동으로 갱신하도록 설정합니다. `sudo certbot renew --dry-run` 명령으로 자동 갱신 테스트를 수행할 수 있습니다.

## 3. Nginx 설정 업데이트 (Docker 환경)

귀하의 채팅 웹 애플리케이션이 Docker 컨테이너로 실행되고 있으므로, Nginx 컨테이너의 설정을 업데이트해야 합니다. 이전에 Manus AI가 생성한 `nginx/conf/default.conf` 파일은 이미 SSL 설정을 포함하도록 수정되었습니다. Certbot이 Nginx 설정을 자동으로 업데이트하지만, Docker 환경에서는 Certbot이 Nginx 컨테이너 내부에서 실행되어야 하거나, 외부에서 발급받은 인증서를 컨테이너에 마운트해야 합니다.

**현재 샌드박스 환경에서는 Certbot을 Nginx 컨테이너 내부에서 실행하기 어렵습니다.** 따라서, 외부에서 발급받은 인증서를 Nginx 컨테이너에 마운트하는 방식을 권장합니다.

### 3.1 인증서 파일 복사

Certbot으로 발급받은 인증서 파일은 일반적으로 `/etc/letsencrypt/live/chavion.com/` 경로에 저장됩니다. 이 파일들을 Nginx 컨테이너가 접근할 수 있는 `nginx/ssl` 디렉토리로 복사합니다.

```bash
sudo cp /etc/letsencrypt/live/chavion.com/fullchain.pem /home/ubuntu/nginx/ssl/chavion.com.crt
sudo cp /etc/letsencrypt/live/chavion.com/privkey.pem /home/ubuntu/nginx/ssl/chavion.com.key
```

### 3.2 Docker Compose 파일 업데이트

`docker-compose.yml` 파일의 `nginx` 서비스 볼륨 설정을 확인하여 `nginx/ssl` 디렉토리가 Nginx 컨테이너의 `/etc/nginx/ssl` 경로에 올바르게 마운트되어 있는지 확인합니다. Manus AI가 제공한 `docker-compose.yml` 파일은 이미 이 설정을 포함하고 있습니다.

```yaml
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl  # 이 부분이 중요합니다.
    depends_on:
      - frontend
      - backend
```

### 3.3 Nginx 컨테이너 재시작

인증서 파일을 복사하고 `docker-compose.yml` 파일이 올바르게 설정되었다면, Nginx 컨테이너를 재시작하여 변경 사항을 적용합니다.

```bash
docker stop chatweb-nginx-container
docker rm chatweb-nginx-container
docker run -d -p 80:80 -p 443:443 --name chatweb-nginx-container chatweb-nginx:latest
```

**참고**: `chatweb-nginx:latest` 이미지는 `nginx/conf/default.conf`와 `nginx/ssl` 디렉토리를 컨테이너 내부로 복사하도록 빌드되어 있습니다. 따라서, `default.conf` 파일 내의 SSL 인증서 경로가 `chavion.com.crt`와 `chavion.com.key`로 설정되어 있는지 확인해야 합니다.

## 4. 최종 확인

모든 설정이 완료되면 웹 브라우저를 열고 `https://chavion.com`으로 접속하여 웹사이트가 HTTPS로 정상적으로 로드되는지 확인합니다. 브라우저의 주소창에 자물쇠 아이콘이 표시되면 SSL 인증서가 성공적으로 적용된 것입니다.

이 가이드라인을 통해 `chavion.com` 도메인 연결 및 SSL 적용을 성공적으로 완료하시길 바랍니다. 추가적인 문의사항이 있으시면 언제든지 문의해주세요.


