
import pandas as pd

def generate_qa_dataset():
    data = [
        {"question": "AI 에이전트란 무엇인가요?", "answer": "AI 에이전트는 특정 목표를 달성하기 위해 환경을 인지하고, 판단하며, 행동하는 인공지능 시스템입니다. 저와 같은 AI 에이전트는 사용자의 요청을 이해하고, 적절한 도구를 사용하여 작업을 수행하며, 결과를 사용자에게 전달하는 역할을 합니다."},
        {"question": "Manus 플랫폼의 주요 기능은 무엇인가요?", "answer": "Manus 플랫폼은 사용자가 지정한 작업을 수행하기 위해 샌드박스 환경에서 다양한 도구(쉘, 브라우저, 파일 시스템 등)를 활용하는 자율 AI 에이전트입니다. 정보 수집, 데이터 분석, 문서 작성, 웹 개발, 미디어 생성 등 광범위한 작업을 처리할 수 있습니다."},
        {"question": "Python으로 웹 서버를 구축하는 방법은 무엇인가요?", "answer": "Python으로 웹 서버를 구축하는 가장 일반적인 방법은 Flask나 FastAPI와 같은 웹 프레임워크를 사용하는 것입니다. Flask는 가볍고 유연하며, FastAPI는 비동기 처리에 강점을 가지고 있습니다. 기본적인 서버 설정, 라우팅, 요청 처리 로직을 구현하여 웹 서비스를 제공할 수 있습니다."},
        {"question": "React로 프론트엔드 개발 시 중요한 고려사항은 무엇인가요?", "answer": "React로 프론트엔드를 개발할 때는 컴포넌트 기반 아키텍처, 상태 관리(useState, useContext, Redux 등), 라우팅(React Router), 성능 최적화(메모이제이션, 코드 스플리팅), 그리고 사용자 경험(UX)을 위한 반응형 디자인 등을 고려해야 합니다."},
        {"question": "클라우드 기반 AI 서비스의 장점은 무엇인가요?", "answer": "클라우드 기반 AI 서비스는 고가의 하드웨어 구매 없이 AI 모델을 학습하고 배포할 수 있으며, 필요에 따라 컴퓨팅 자원을 유연하게 확장하거나 축소할 수 있습니다. 또한, 최신 AI 기술과 미리 학습된 모델을 쉽게 활용할 수 있어 개발 시간과 비용을 절감할 수 있습니다."},
        {"question": "AI 모델 파인튜닝이란 무엇인가요?", "answer": "AI 모델 파인튜닝은 이미 대규모 데이터로 사전 학습된 모델을 특정 작업이나 도메인에 맞는 소량의 데이터로 추가 학습시켜 성능을 최적화하는 과정입니다. 이를 통해 모델이 특정 분야의 전문 지식이나 대화 스타일을 습득하도록 할 수 있습니다."},
        {"question": "효과적인 프롬프트 엔지니어링 전략은 무엇인가요?", "answer": "효과적인 프롬프트 엔지니어링은 AI 모델에게 명확하고 구체적인 지시를 제공하여 원하는 응답을 얻는 기술입니다. 역할 부여, 제약 조건 설정, 예시 제공(Few-shot learning), 단계별 지시, 출력 형식 지정 등의 전략을 활용할 수 있습니다."},
        {"question": "샌드박스 환경의 장점은 무엇인가요?", "answer": "샌드박스 환경은 격리된 가상 공간으로, 프로그램이나 코드를 안전하게 실행하고 테스트할 수 있습니다. 시스템에 영향을 주지 않고 잠재적인 위협을 방지하며, 개발 및 테스트 환경을 일관되게 유지할 수 있다는 장점이 있습니다."},
        {"question": "Git을 사용하여 프로젝트를 관리하는 방법은 무엇인가요?", "answer": "Git은 분산 버전 관리 시스템으로, 코드 변경 이력을 추적하고 여러 개발자가 협업하여 프로젝트를 관리할 수 있도록 돕습니다. `git clone`, `git add`, `git commit`, `git push`, `git pull`, `git branch`, `git merge` 등의 명령어를 사용하여 효율적으로 프로젝트를 관리할 수 있습니다."},
        {"question": "데이터 분석 과정의 주요 단계는 무엇인가요?", "answer": "데이터 분석 과정은 일반적으로 데이터 수집, 데이터 전처리(정제, 변환), 탐색적 데이터 분석(EDA), 모델링, 평가 및 시각화 단계로 이루어집니다. 각 단계는 데이터로부터 의미 있는 통찰력을 얻기 위해 중요합니다."},
        {"question": "AI 윤리에서 중요한 고려사항은 무엇인가요?", "answer": "AI 윤리에서는 공정성, 투명성, 책임성, 개인정보 보호, 안전성 등이 중요하게 고려됩니다. AI 시스템이 사회에 미치는 긍정적 영향을 최대화하고 부정적 영향을 최소화하기 위해 이러한 원칙들을 준수해야 합니다."},
        {"question": "머신러닝 모델 배포 시 고려할 점은 무엇인가요?", "answer": "머신러닝 모델 배포 시에는 모델 서빙(API), 확장성, 지연 시간, 비용 효율성, 모니터링, 버전 관리, 그리고 지속적인 통합/배포(CI/CD) 파이프라인 구축 등을 고려해야 합니다."},
        {"question": "자연어 처리(NLP)의 주요 응용 분야는 무엇인가요?", "answer": "자연어 처리(NLP)는 텍스트 데이터를 분석하고 이해하는 AI 분야로, 기계 번역, 챗봇, 감성 분석, 텍스트 요약, 스팸 메일 필터링, 음성 인식 등 다양한 분야에 응용됩니다."},
        {"question": "컴퓨터 비전의 주요 응용 분야는 무엇인가요?", "answer": "컴퓨터 비전은 이미지와 비디오 데이터를 분석하고 이해하는 AI 분야로, 얼굴 인식, 객체 탐지, 자율 주행, 의료 영상 분석, 증강 현실(AR) 등 다양한 분야에 응용됩니다."},
        {"question": "강화 학습(Reinforcement Learning)이란 무엇인가요?", "answer": "강화 학습은 에이전트가 환경과 상호작용하며 시행착오를 통해 최적의 행동 전략을 학습하는 머신러닝 분야입니다. 보상 시스템을 통해 목표를 달성하도록 유도하며, 게임 플레이, 로봇 제어, 자율 주행 등에 활용됩니다."},
        {"question": "생성형 AI(Generative AI)의 주요 특징은 무엇인가요?", "answer": "생성형 AI는 텍스트, 이미지, 오디오 등 새로운 콘텐츠를 생성하는 인공지능 모델입니다. 기존 데이터를 학습하여 패턴을 익히고, 이를 바탕으로 독창적인 결과물을 만들어내는 것이 특징입니다."},
        {"question": "AI 모델의 편향(Bias)은 왜 발생하며 어떻게 해결할 수 있나요?", "answer": "AI 모델의 편향은 학습 데이터에 특정 그룹이나 특성이 과도하게 또는 부족하게 반영될 때 발생합니다. 이를 해결하기 위해서는 다양하고 균형 잡힌 데이터셋을 구축하고, 편향 감지 및 완화 기술을 적용하며, 모델의 의사결정 과정을 투명하게 공개하는 노력이 필요합니다."},
        {"question": "AI 개발 시 오픈소스 라이브러리 활용의 장점은 무엇인가요?", "answer": "AI 개발 시 TensorFlow, PyTorch, Hugging Face Transformers와 같은 오픈소스 라이브러리를 활용하면 개발 시간과 비용을 절감하고, 커뮤니티의 지원을 받을 수 있으며, 최신 연구 동향을 빠르게 적용할 수 있다는 장점이 있습니다."},
        {"question": "API(Application Programming Interface)란 무엇인가요?", "answer": "API는 서로 다른 소프트웨어 시스템이 통신하고 상호작용할 수 있도록 정의된 규칙과 프로토콜의 집합입니다. 이를 통해 개발자는 다른 서비스의 기능을 자신의 애플리케이션에 쉽게 통합할 수 있습니다."},
        {"question": "클라우드 컴퓨팅의 주요 서비스 모델은 무엇인가요?", "answer": "클라우드 컴퓨팅의 주요 서비스 모델로는 IaaS(Infrastructure as a Service), PaaS(Platform as a Service), SaaS(Software as a Service)가 있습니다. 각각 인프라, 플랫폼, 소프트웨어를 서비스 형태로 제공합니다."}
    ]
    return pd.DataFrame(data)

if __name__ == "__main__":
    df = generate_qa_dataset()
    df.to_csv("gemini_finetuning_qa_dataset.csv", index=False, encoding='utf-8-sig')
    print("gemini_finetuning_qa_dataset.csv 파일이 성공적으로 생성되었습니다.")


